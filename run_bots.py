# run_bots.py
import multiprocessing
import logging
import time
import os
import signal
import sys

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
os.makedirs("qari_photos", exist_ok=True)

def signal_handler(sig, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ—Ç–æ–≤...")
    sys.exit(0)

def run_admin_bot():
    """–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    try:
        from admin_bot import main as admin_main
        admin_main()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∞–¥–º–∏–Ω-–±–æ—Ç–µ: {e}")

def run_user_bot():
    """–ó–∞–ø—É—Å–∫ —é–∑–µ—Ä-–±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    try:
        from user_bot import main as user_main
        user_main()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —é–∑–µ—Ä-–±–æ—Ç–µ: {e}")

if __name__ == '__main__':
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logging.basicConfig(
        format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        level=logging.INFO
    )
    
    logger = logging.getLogger(__name__)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    signal.signal(signal.SIGINT, signal_handler)
    signal.signal(signal.SIGTERM, signal_handler)
    
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–æ–≤ –Ω–∞ Railway...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –±–æ—Ç–æ–≤
    admin_process = multiprocessing.Process(target=run_admin_bot, name="AdminBot")
    user_process = multiprocessing.Process(target=run_user_bot, name="UserBot")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    admin_process.start()
    user_process.start()
    
    logger.info("‚úÖ –û–±–∞ –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    logger.info(f"Admin Bot PID: {admin_process.pid}")
    logger.info(f"User Bot PID: {user_process.pid}")
    
    try:
        # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –ø—Ä–æ—Ü–µ—Å—Å—ã
        while True:
            if not admin_process.is_alive():
                logger.error("‚ùå –ê–¥–º–∏–Ω-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...")
                admin_process = multiprocessing.Process(target=run_admin_bot, name="AdminBot")
                admin_process.start()
                logger.info(f"üîÑ –ê–¥–º–∏–Ω-–±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, PID: {admin_process.pid}")
            
            if not user_process.is_alive():
                logger.error("‚ùå –Æ–∑–µ—Ä-–±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º...")
                user_process = multiprocessing.Process(target=run_user_bot, name="UserBot")
                user_process.start()
                logger.info(f"üîÑ –Æ–∑–µ—Ä-–±–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, PID: {user_process.pid}")
            
            time.sleep(10)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
            
    except KeyboardInterrupt:
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        logger.info("üîÑ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–æ–≤...")
        admin_process.terminate()
        user_process.terminate()
        admin_process.join(timeout=5)
        user_process.join(timeout=5)
        logger.info("‚úÖ –ë–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")